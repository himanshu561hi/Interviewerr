/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(main)/all-interview/page",{

/***/ "(app-pages-browser)/./app/(main)/all-interview/page.jsx":
/*!*******************************************!*\
  !*** ./app/(main)/all-interview/page.jsx ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("// \"use client\"\n// import React, { useState, useEffect } from 'react';\n// import { Button } from '@/components/ui/button';\n// import { Video } from 'lucide-react';\n// import Link from 'next/link';\n// import { useUser } from '@/app/provider'; // Using the consistent provider path\n// import { supabase } from '@/services/supabaseClient';\n// import InterviewCard from '../dashboard/_components/InterviewCard';\n// function AllInterview() { \n//     const [interviewList, setInterviewList] = useState([]);\n//     const { user, loading } = useUser(); // Changed isLoading to loading to match provider\n//     useEffect(() => {\n//         if (user && !loading) { // Changed isLoading to loading\n//             getInterviewList();\n//         }\n//     }, [user, loading]); // Changed isLoading to loading\n//     const getInterviewList = async () => {\n//         if (!user?.email) {\n//             return;\n//         }\n//         const { data, error } = await supabase\n//             .from('Interview')\n//             .select('*, interview-feedback(userEmail)')\n//             .eq('email', user.email) // Matching the dashboard query logic\n//             .order('id', { ascending: false });\n//         if (error) {\n//             console.error('Error fetching all interviews:', error);\n//             setInterviewList([]);\n//             return;\n//         }\n//         setInterviewList(data || []);\n//     }\n//     if (loading) { // Changed isLoading to loading\n//         return <div className=\"my-5 text-center\">Loading user data...</div>;\n//     }\n//     return (\n//         <div className=\"\">\n//             <h2 className=\"font-bold text-2xl mb-8\">All Previously Created Interviews</h2>\n//             {interviewList.length > 0 ? (\n//                 <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-5\">\n//                     {interviewList.map((interview) => (\n//                         <InterviewCard interview={interview} key={interview.id} /> \n//                     ))}\n//                 </div>\n//             ) : (\n//                 <div className=\"p-5 flex flex-col gap-3 bg-white rounded-2xl border border-gray-200 items-center mt-5\">\n//                     <Video className=\"h-10 w-10 text-primary\" />\n//                     <h2 className=\"font-bold\">No Interviews Found</h2>\n//                     <p className=\"text-sm text-gray-500\">You haven't created any interviews yet.</p>\n//                     <Button asChild className=\"mt-2\">\n//                         <Link href=\"/dashboard/create-interview\">+ Create New Interview</Link>\n//                     </Button>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// }\n// export default AllInterview;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC8obWFpbikvYWxsLWludGVydmlldy9wYWdlLmpzeCIsIm1hcHBpbmdzIjoiQUFDQSxlQUFlO0FBQ2Ysc0RBQXNEO0FBQ3RELG1EQUFtRDtBQUNuRCx3Q0FBd0M7QUFDeEMsZ0NBQWdDO0FBQ2hDLGtGQUFrRjtBQUNsRix3REFBd0Q7QUFDeEQsc0VBQXNFO0FBRXRFLDZCQUE2QjtBQUM3Qiw4REFBOEQ7QUFDOUQsNkZBQTZGO0FBRTdGLHdCQUF3QjtBQUN4QixrRUFBa0U7QUFDbEUsa0NBQWtDO0FBQ2xDLFlBQVk7QUFDWiwyREFBMkQ7QUFFM0QsNkNBQTZDO0FBQzdDLDhCQUE4QjtBQUM5QixzQkFBc0I7QUFDdEIsWUFBWTtBQUVaLGlEQUFpRDtBQUNqRCxpQ0FBaUM7QUFDakMsMERBQTBEO0FBQzFELDZFQUE2RTtBQUM3RSxrREFBa0Q7QUFFbEQsdUJBQXVCO0FBQ3ZCLHNFQUFzRTtBQUN0RSxvQ0FBb0M7QUFDcEMsc0JBQXNCO0FBQ3RCLFlBQVk7QUFFWix3Q0FBd0M7QUFDeEMsUUFBUTtBQUVSLHFEQUFxRDtBQUNyRCwrRUFBK0U7QUFDL0UsUUFBUTtBQUVSLGVBQWU7QUFDZiw2QkFBNkI7QUFDN0IsNkZBQTZGO0FBQzdGLDRDQUE0QztBQUM1Qyx5RkFBeUY7QUFDekYsMERBQTBEO0FBQzFELHNGQUFzRjtBQUN0RiwwQkFBMEI7QUFDMUIseUJBQXlCO0FBQ3pCLG9CQUFvQjtBQUNwQiwwSEFBMEg7QUFDMUgsbUVBQW1FO0FBQ25FLHlFQUF5RTtBQUN6RSx1R0FBdUc7QUFDdkcsd0RBQXdEO0FBQ3hELGlHQUFpRztBQUNqRyxnQ0FBZ0M7QUFDaEMseUJBQXlCO0FBQ3pCLGlCQUFpQjtBQUNqQixpQkFBaUI7QUFDakIsU0FBUztBQUNULElBQUk7QUFFSiwrQkFBK0IiLCJzb3VyY2VzIjpbIi9Wb2x1bWVzL0hpbWFuc2h1L0hpbWFuc2h1L0dpdEh1YiBSZXBvcy9JbnRlcnZpZXdlci9hcHAvKG1haW4pL2FsbC1pbnRlcnZpZXcvcGFnZS5qc3giXSwic291cmNlc0NvbnRlbnQiOlsiXG4vLyBcInVzZSBjbGllbnRcIlxuLy8gaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG4vLyBpbXBvcnQgeyBCdXR0b24gfSBmcm9tICdAL2NvbXBvbmVudHMvdWkvYnV0dG9uJztcbi8vIGltcG9ydCB7IFZpZGVvIH0gZnJvbSAnbHVjaWRlLXJlYWN0Jztcbi8vIGltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG4vLyBpbXBvcnQgeyB1c2VVc2VyIH0gZnJvbSAnQC9hcHAvcHJvdmlkZXInOyAvLyBVc2luZyB0aGUgY29uc2lzdGVudCBwcm92aWRlciBwYXRoXG4vLyBpbXBvcnQgeyBzdXBhYmFzZSB9IGZyb20gJ0Avc2VydmljZXMvc3VwYWJhc2VDbGllbnQnO1xuLy8gaW1wb3J0IEludGVydmlld0NhcmQgZnJvbSAnLi4vZGFzaGJvYXJkL19jb21wb25lbnRzL0ludGVydmlld0NhcmQnO1xuXG4vLyBmdW5jdGlvbiBBbGxJbnRlcnZpZXcoKSB7IFxuLy8gICAgIGNvbnN0IFtpbnRlcnZpZXdMaXN0LCBzZXRJbnRlcnZpZXdMaXN0XSA9IHVzZVN0YXRlKFtdKTtcbi8vICAgICBjb25zdCB7IHVzZXIsIGxvYWRpbmcgfSA9IHVzZVVzZXIoKTsgLy8gQ2hhbmdlZCBpc0xvYWRpbmcgdG8gbG9hZGluZyB0byBtYXRjaCBwcm92aWRlclxuXG4vLyAgICAgdXNlRWZmZWN0KCgpID0+IHtcbi8vICAgICAgICAgaWYgKHVzZXIgJiYgIWxvYWRpbmcpIHsgLy8gQ2hhbmdlZCBpc0xvYWRpbmcgdG8gbG9hZGluZ1xuLy8gICAgICAgICAgICAgZ2V0SW50ZXJ2aWV3TGlzdCgpO1xuLy8gICAgICAgICB9XG4vLyAgICAgfSwgW3VzZXIsIGxvYWRpbmddKTsgLy8gQ2hhbmdlZCBpc0xvYWRpbmcgdG8gbG9hZGluZ1xuXG4vLyAgICAgY29uc3QgZ2V0SW50ZXJ2aWV3TGlzdCA9IGFzeW5jICgpID0+IHtcbi8vICAgICAgICAgaWYgKCF1c2VyPy5lbWFpbCkge1xuLy8gICAgICAgICAgICAgcmV0dXJuO1xuLy8gICAgICAgICB9XG5cbi8vICAgICAgICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2Vcbi8vICAgICAgICAgICAgIC5mcm9tKCdJbnRlcnZpZXcnKVxuLy8gICAgICAgICAgICAgLnNlbGVjdCgnKiwgaW50ZXJ2aWV3LWZlZWRiYWNrKHVzZXJFbWFpbCknKVxuLy8gICAgICAgICAgICAgLmVxKCdlbWFpbCcsIHVzZXIuZW1haWwpIC8vIE1hdGNoaW5nIHRoZSBkYXNoYm9hcmQgcXVlcnkgbG9naWNcbi8vICAgICAgICAgICAgIC5vcmRlcignaWQnLCB7IGFzY2VuZGluZzogZmFsc2UgfSk7XG5cbi8vICAgICAgICAgaWYgKGVycm9yKSB7XG4vLyAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBhbGwgaW50ZXJ2aWV3czonLCBlcnJvcik7XG4vLyAgICAgICAgICAgICBzZXRJbnRlcnZpZXdMaXN0KFtdKTtcbi8vICAgICAgICAgICAgIHJldHVybjtcbi8vICAgICAgICAgfVxuXG4vLyAgICAgICAgIHNldEludGVydmlld0xpc3QoZGF0YSB8fCBbXSk7XG4vLyAgICAgfVxuXG4vLyAgICAgaWYgKGxvYWRpbmcpIHsgLy8gQ2hhbmdlZCBpc0xvYWRpbmcgdG8gbG9hZGluZ1xuLy8gICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJteS01IHRleHQtY2VudGVyXCI+TG9hZGluZyB1c2VyIGRhdGEuLi48L2Rpdj47XG4vLyAgICAgfVxuXG4vLyAgICAgcmV0dXJuIChcbi8vICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJcIj5cbi8vICAgICAgICAgICAgIDxoMiBjbGFzc05hbWU9XCJmb250LWJvbGQgdGV4dC0yeGwgbWItOFwiPkFsbCBQcmV2aW91c2x5IENyZWF0ZWQgSW50ZXJ2aWV3czwvaDI+XG4vLyAgICAgICAgICAgICB7aW50ZXJ2aWV3TGlzdC5sZW5ndGggPiAwID8gKFxuLy8gICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBncmlkLWNvbHMtMSBtZDpncmlkLWNvbHMtMiBsZzpncmlkLWNvbHMtMyBnYXAtNVwiPlxuLy8gICAgICAgICAgICAgICAgICAgICB7aW50ZXJ2aWV3TGlzdC5tYXAoKGludGVydmlldykgPT4gKFxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgPEludGVydmlld0NhcmQgaW50ZXJ2aWV3PXtpbnRlcnZpZXd9IGtleT17aW50ZXJ2aWV3LmlkfSAvPiBcbi8vICAgICAgICAgICAgICAgICAgICAgKSl9XG4vLyAgICAgICAgICAgICAgICAgPC9kaXY+XG4vLyAgICAgICAgICAgICApIDogKFxuLy8gICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicC01IGZsZXggZmxleC1jb2wgZ2FwLTMgYmctd2hpdGUgcm91bmRlZC0yeGwgYm9yZGVyIGJvcmRlci1ncmF5LTIwMCBpdGVtcy1jZW50ZXIgbXQtNVwiPlxuLy8gICAgICAgICAgICAgICAgICAgICA8VmlkZW8gY2xhc3NOYW1lPVwiaC0xMCB3LTEwIHRleHQtcHJpbWFyeVwiIC8+XG4vLyAgICAgICAgICAgICAgICAgICAgIDxoMiBjbGFzc05hbWU9XCJmb250LWJvbGRcIj5ObyBJbnRlcnZpZXdzIEZvdW5kPC9oMj5cbi8vICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1zbSB0ZXh0LWdyYXktNTAwXCI+WW91IGhhdmVuJ3QgY3JlYXRlZCBhbnkgaW50ZXJ2aWV3cyB5ZXQuPC9wPlxuLy8gICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIGFzQ2hpbGQgY2xhc3NOYW1lPVwibXQtMlwiPlxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9kYXNoYm9hcmQvY3JlYXRlLWludGVydmlld1wiPisgQ3JlYXRlIE5ldyBJbnRlcnZpZXc8L0xpbms+XG4vLyAgICAgICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxuLy8gICAgICAgICAgICAgICAgIDwvZGl2PlxuLy8gICAgICAgICAgICAgKX1cbi8vICAgICAgICAgPC9kaXY+XG4vLyAgICAgKTtcbi8vIH1cblxuLy8gZXhwb3J0IGRlZmF1bHQgQWxsSW50ZXJ2aWV3O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/(main)/all-interview/page.jsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FVolumes%2FHimanshu%2FHimanshu%2FGitHub%20Repos%2FInterviewer%2Fapp%2F(main)%2Fall-interview%2Fpage.jsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!**************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FVolumes%2FHimanshu%2FHimanshu%2FGitHub%20Repos%2FInterviewer%2Fapp%2F(main)%2Fall-interview%2Fpage.jsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \**************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./app/(main)/all-interview/page.jsx */ \"(app-pages-browser)/./app/(main)/all-interview/page.jsx\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVm9sdW1lcyUyRkhpbWFuc2h1JTJGSGltYW5zaHUlMkZHaXRIdWIlMjBSZXBvcyUyRkludGVydmlld2VyJTJGYXBwJTJGKG1haW4pJTJGYWxsLWludGVydmlldyUyRnBhZ2UuanN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsc01BQTBIIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVm9sdW1lcy9IaW1hbnNodS9IaW1hbnNodS9HaXRIdWIgUmVwb3MvSW50ZXJ2aWV3ZXIvYXBwLyhtYWluKS9hbGwtaW50ZXJ2aWV3L3BhZ2UuanN4XCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FVolumes%2FHimanshu%2FHimanshu%2FGitHub%20Repos%2FInterviewer%2Fapp%2F(main)%2Fall-interview%2Fpage.jsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ })

});