/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(main)/scheduled-interview/[interview_Id]/Details/page",{

/***/ "(app-pages-browser)/./app/(main)/scheduled-interview/[interview_Id]/Details/_components/InterviewDetailContainer.jsx":
/*!********************************************************************************************************!*\
  !*** ./app/(main)/scheduled-interview/[interview_Id]/Details/_components/InterviewDetailContainer.jsx ***!
  \********************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("// import React from 'react';\n// import { Clock, Calendar, Tag } from 'lucide-react';\n// import { format } from 'date-fns';\n// const InterviewDetailContainer = ({ interviewDetail }) => {\n//     // Helper function to safely parse and format the interview types\n//     const getInterviewTypes = () => {\n//         if (!interviewDetail || !interviewDetail.type) {\n//             return []; // Return empty array if no data\n//         }\n//         try {\n//             const typeArray = JSON.parse(interviewDetail.type);\n//             if (Array.isArray(typeArray)) {\n//                 // This logic splits concatenated words like \"TechnicalBehavioral\" into [\"Technical\", \"Behavioral\"]\n//                 return typeArray.flatMap(type =>\n//                     typeof type === 'string'\n//                         ? type.split(/(?=[A-Z])/).map(part => part.trim()).filter(Boolean)\n//                         : [type]\n//                 );\n//             }\n//             return [];\n//         } catch (error) {\n//             console.error(\"Failed to parse interview type:\", error);\n//             return [];\n//         }\n//     };\n//     // Call the function to get the clean array of types\n//     const interviewTypes = getInterviewTypes();\n//     // Render a loading state or nothing if data is not yet available\n//     if (!interviewDetail) {\n//         return (\n//             <div className=\"p-5 mt-3 bg-white rounded-lg text-center\">\n//                 <p>Loading interview details...</p>\n//             </div>\n//         );\n//     }\n//     // Safely format the date\n//     const formattedDate = interviewDetail.created_at\n//         ? format(new Date(interviewDetail.created_at), 'PP') // Using 'PP' for a more readable format like 'Oct 2, 2025'\n//         : 'Not available';\n//     return (\n//         <div className=\"p-5 mt-3 bg-white rounded-lg border shadow-sm\">\n//             <h2 className=\"text-xl font-bold text-gray-800\">{interviewDetail.jobPosition}</h2>\n//             <div className=\"mt-4 flex items-center justify-between lg:pr-52\">\n//                 <div>\n//                     <h3 className=\"text-sm text-gray-500 flex items-center gap-1\">Duration</h3>\n//                     <p className=\"font-bold mt-1 flex items-center gap-1\"><Clock className=\"h-4 w-4\"/> {interviewDetail.duration}</p>\n//                 </div>\n//                 <div>\n//                     <h3 className=\"text-sm text-gray-500 flex items-center gap-1\"> Created On</h3>\n//                     <p className=\"font-bold mt-1 flex items-center gap-1\"><Calendar className=\"h-4 w-4\"/>{formattedDate}</p>\n//                 </div>\n//                 {interviewTypes.length > 0 && (\n//                     <div className=\"col-span-2 md:col-span-1\">\n//                         <h3 className=\"text-sm text-gray-500 flex items-center gap-1\">Type</h3>\n//                         {/* Displaying types with comma and space */}\n//                         <p className=\"font-bold mt-1 flex items-center gap-1\"><Tag className=\"h-4 w-4\"/> {interviewTypes.join(', ')}</p>\n//                     </div>\n//                 )}\n//             </div>\n//             {interviewDetail.jobDescription && (\n//                 <div className=\"mt-5\">\n//                     <h3 className=\"font-bold text-gray-800\">Job Description</h3>\n//                     <p className=\"text-sm mt-2 text-gray-600\">{interviewDetail.jobDescription}</p>\n//                 </div>\n//             )}\n//             <div className=\"mt-5\">\n//                 <h2 className=\"font-bold\">Interview Questions</h2>\n//                 <div className=\"grid grid-cols-2 mt-3 gap-3\">\n//                     {interviewDetail.questionList.map((item, index) => (\n//     <div key={index} className=\"grid-cols-2 mt-3 gap-3\">\n//         <h2 className=\"text-xs flex\">{index+1}. {item?.question}</h2>\n//     </div>\n// ))}\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// };\n// export default InterviewDetailContainer;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC8obWFpbikvc2NoZWR1bGVkLWludGVydmlldy9baW50ZXJ2aWV3X0lkXS9EZXRhaWxzL19jb21wb25lbnRzL0ludGVydmlld0RldGFpbENvbnRhaW5lci5qc3giLCJtYXBwaW5ncyI6IkFBQ0EsNkJBQTZCO0FBQzdCLHVEQUF1RDtBQUN2RCxxQ0FBcUM7QUFFckMsOERBQThEO0FBRTlELHdFQUF3RTtBQUN4RSx3Q0FBd0M7QUFDeEMsMkRBQTJEO0FBQzNELDBEQUEwRDtBQUMxRCxZQUFZO0FBQ1osZ0JBQWdCO0FBQ2hCLGtFQUFrRTtBQUNsRSw4Q0FBOEM7QUFDOUMsc0hBQXNIO0FBQ3RILG1EQUFtRDtBQUNuRCwrQ0FBK0M7QUFDL0MsNkZBQTZGO0FBQzdGLG1DQUFtQztBQUNuQyxxQkFBcUI7QUFDckIsZ0JBQWdCO0FBQ2hCLHlCQUF5QjtBQUN6Qiw0QkFBNEI7QUFDNUIsdUVBQXVFO0FBQ3ZFLHlCQUF5QjtBQUN6QixZQUFZO0FBQ1osU0FBUztBQUVULDJEQUEyRDtBQUMzRCxrREFBa0Q7QUFFbEQsd0VBQXdFO0FBQ3hFLDhCQUE4QjtBQUM5QixtQkFBbUI7QUFDbkIseUVBQXlFO0FBQ3pFLHNEQUFzRDtBQUN0RCxxQkFBcUI7QUFDckIsYUFBYTtBQUNiLFFBQVE7QUFFUixnQ0FBZ0M7QUFDaEMsdURBQXVEO0FBQ3ZELDJIQUEySDtBQUMzSCw2QkFBNkI7QUFFN0IsZUFBZTtBQUNmLDBFQUEwRTtBQUMxRSxpR0FBaUc7QUFFakcsZ0ZBQWdGO0FBQ2hGLHdCQUF3QjtBQUN4QixrR0FBa0c7QUFDbEcsd0lBQXdJO0FBQ3hJLHlCQUF5QjtBQUN6Qix3QkFBd0I7QUFDeEIscUdBQXFHO0FBQ3JHLCtIQUErSDtBQUMvSCx5QkFBeUI7QUFDekIsa0RBQWtEO0FBQ2xELGlFQUFpRTtBQUNqRSxrR0FBa0c7QUFDbEcsd0VBQXdFO0FBQ3hFLDJJQUEySTtBQUMzSSw2QkFBNkI7QUFDN0IscUJBQXFCO0FBQ3JCLHFCQUFxQjtBQUVyQixtREFBbUQ7QUFDbkQseUNBQXlDO0FBQ3pDLG1GQUFtRjtBQUNuRixxR0FBcUc7QUFDckcseUJBQXlCO0FBQ3pCLGlCQUFpQjtBQUVqQixxQ0FBcUM7QUFDckMscUVBQXFFO0FBQ3JFLGdFQUFnRTtBQUNoRSwyRUFBMkU7QUFDM0UsMkRBQTJEO0FBQzNELHdFQUF3RTtBQUN4RSxhQUFhO0FBQ2IsTUFBTTtBQUNOLHlCQUF5QjtBQUN6QixxQkFBcUI7QUFDckIsaUJBQWlCO0FBQ2pCLFNBQVM7QUFDVCxLQUFLO0FBRUwsMkNBQTJDIiwic291cmNlcyI6WyIvVm9sdW1lcy9IaW1hbnNodS9IaW1hbnNodS9HaXRIdWIgUmVwb3MvSW50ZXJ2aWV3ZXIvYXBwLyhtYWluKS9zY2hlZHVsZWQtaW50ZXJ2aWV3L1tpbnRlcnZpZXdfSWRdL0RldGFpbHMvX2NvbXBvbmVudHMvSW50ZXJ2aWV3RGV0YWlsQ29udGFpbmVyLmpzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJcbi8vIGltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG4vLyBpbXBvcnQgeyBDbG9jaywgQ2FsZW5kYXIsIFRhZyB9IGZyb20gJ2x1Y2lkZS1yZWFjdCc7XG4vLyBpbXBvcnQgeyBmb3JtYXQgfSBmcm9tICdkYXRlLWZucyc7XG5cbi8vIGNvbnN0IEludGVydmlld0RldGFpbENvbnRhaW5lciA9ICh7IGludGVydmlld0RldGFpbCB9KSA9PiB7XG5cbi8vICAgICAvLyBIZWxwZXIgZnVuY3Rpb24gdG8gc2FmZWx5IHBhcnNlIGFuZCBmb3JtYXQgdGhlIGludGVydmlldyB0eXBlc1xuLy8gICAgIGNvbnN0IGdldEludGVydmlld1R5cGVzID0gKCkgPT4ge1xuLy8gICAgICAgICBpZiAoIWludGVydmlld0RldGFpbCB8fCAhaW50ZXJ2aWV3RGV0YWlsLnR5cGUpIHtcbi8vICAgICAgICAgICAgIHJldHVybiBbXTsgLy8gUmV0dXJuIGVtcHR5IGFycmF5IGlmIG5vIGRhdGFcbi8vICAgICAgICAgfVxuLy8gICAgICAgICB0cnkge1xuLy8gICAgICAgICAgICAgY29uc3QgdHlwZUFycmF5ID0gSlNPTi5wYXJzZShpbnRlcnZpZXdEZXRhaWwudHlwZSk7XG4vLyAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh0eXBlQXJyYXkpKSB7XG4vLyAgICAgICAgICAgICAgICAgLy8gVGhpcyBsb2dpYyBzcGxpdHMgY29uY2F0ZW5hdGVkIHdvcmRzIGxpa2UgXCJUZWNobmljYWxCZWhhdmlvcmFsXCIgaW50byBbXCJUZWNobmljYWxcIiwgXCJCZWhhdmlvcmFsXCJdXG4vLyAgICAgICAgICAgICAgICAgcmV0dXJuIHR5cGVBcnJheS5mbGF0TWFwKHR5cGUgPT5cbi8vICAgICAgICAgICAgICAgICAgICAgdHlwZW9mIHR5cGUgPT09ICdzdHJpbmcnXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICA/IHR5cGUuc3BsaXQoLyg/PVtBLVpdKS8pLm1hcChwYXJ0ID0+IHBhcnQudHJpbSgpKS5maWx0ZXIoQm9vbGVhbilcbi8vICAgICAgICAgICAgICAgICAgICAgICAgIDogW3R5cGVdXG4vLyAgICAgICAgICAgICAgICAgKTtcbi8vICAgICAgICAgICAgIH1cbi8vICAgICAgICAgICAgIHJldHVybiBbXTtcbi8vICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbi8vICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gcGFyc2UgaW50ZXJ2aWV3IHR5cGU6XCIsIGVycm9yKTtcbi8vICAgICAgICAgICAgIHJldHVybiBbXTtcbi8vICAgICAgICAgfVxuLy8gICAgIH07XG4gICAgXG4vLyAgICAgLy8gQ2FsbCB0aGUgZnVuY3Rpb24gdG8gZ2V0IHRoZSBjbGVhbiBhcnJheSBvZiB0eXBlc1xuLy8gICAgIGNvbnN0IGludGVydmlld1R5cGVzID0gZ2V0SW50ZXJ2aWV3VHlwZXMoKTtcblxuLy8gICAgIC8vIFJlbmRlciBhIGxvYWRpbmcgc3RhdGUgb3Igbm90aGluZyBpZiBkYXRhIGlzIG5vdCB5ZXQgYXZhaWxhYmxlXG4vLyAgICAgaWYgKCFpbnRlcnZpZXdEZXRhaWwpIHtcbi8vICAgICAgICAgcmV0dXJuIChcbi8vICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicC01IG10LTMgYmctd2hpdGUgcm91bmRlZC1sZyB0ZXh0LWNlbnRlclwiPlxuLy8gICAgICAgICAgICAgICAgIDxwPkxvYWRpbmcgaW50ZXJ2aWV3IGRldGFpbHMuLi48L3A+XG4vLyAgICAgICAgICAgICA8L2Rpdj5cbi8vICAgICAgICAgKTtcbi8vICAgICB9XG4gICAgXG4vLyAgICAgLy8gU2FmZWx5IGZvcm1hdCB0aGUgZGF0ZVxuLy8gICAgIGNvbnN0IGZvcm1hdHRlZERhdGUgPSBpbnRlcnZpZXdEZXRhaWwuY3JlYXRlZF9hdFxuLy8gICAgICAgICA/IGZvcm1hdChuZXcgRGF0ZShpbnRlcnZpZXdEZXRhaWwuY3JlYXRlZF9hdCksICdQUCcpIC8vIFVzaW5nICdQUCcgZm9yIGEgbW9yZSByZWFkYWJsZSBmb3JtYXQgbGlrZSAnT2N0IDIsIDIwMjUnXG4vLyAgICAgICAgIDogJ05vdCBhdmFpbGFibGUnO1xuXG4vLyAgICAgcmV0dXJuIChcbi8vICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwLTUgbXQtMyBiZy13aGl0ZSByb3VuZGVkLWxnIGJvcmRlciBzaGFkb3ctc21cIj5cbi8vICAgICAgICAgICAgIDxoMiBjbGFzc05hbWU9XCJ0ZXh0LXhsIGZvbnQtYm9sZCB0ZXh0LWdyYXktODAwXCI+e2ludGVydmlld0RldGFpbC5qb2JQb3NpdGlvbn08L2gyPlxuICAgICAgICAgICAgXG4vLyAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm10LTQgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIGxnOnByLTUyXCI+XG4vLyAgICAgICAgICAgICAgICAgPGRpdj5cbi8vICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC1ncmF5LTUwMCBmbGV4IGl0ZW1zLWNlbnRlciBnYXAtMVwiPkR1cmF0aW9uPC9oMz5cbi8vICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwiZm9udC1ib2xkIG10LTEgZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTFcIj48Q2xvY2sgY2xhc3NOYW1lPVwiaC00IHctNFwiLz4ge2ludGVydmlld0RldGFpbC5kdXJhdGlvbn08L3A+XG4vLyAgICAgICAgICAgICAgICAgPC9kaXY+XG4vLyAgICAgICAgICAgICAgICAgPGRpdj5cbi8vICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC1ncmF5LTUwMCBmbGV4IGl0ZW1zLWNlbnRlciBnYXAtMVwiPiBDcmVhdGVkIE9uPC9oMz5cbi8vICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwiZm9udC1ib2xkIG10LTEgZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTFcIj48Q2FsZW5kYXIgY2xhc3NOYW1lPVwiaC00IHctNFwiLz57Zm9ybWF0dGVkRGF0ZX08L3A+XG4vLyAgICAgICAgICAgICAgICAgPC9kaXY+XG4vLyAgICAgICAgICAgICAgICAge2ludGVydmlld1R5cGVzLmxlbmd0aCA+IDAgJiYgKFxuLy8gICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC1zcGFuLTIgbWQ6Y29sLXNwYW4tMVwiPlxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC1ncmF5LTUwMCBmbGV4IGl0ZW1zLWNlbnRlciBnYXAtMVwiPlR5cGU8L2gzPlxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgey8qIERpc3BsYXlpbmcgdHlwZXMgd2l0aCBjb21tYSBhbmQgc3BhY2UgKi99XG4vLyAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJmb250LWJvbGQgbXQtMSBmbGV4IGl0ZW1zLWNlbnRlciBnYXAtMVwiPjxUYWcgY2xhc3NOYW1lPVwiaC00IHctNFwiLz4ge2ludGVydmlld1R5cGVzLmpvaW4oJywgJyl9PC9wPlxuLy8gICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbi8vICAgICAgICAgICAgICAgICApfVxuLy8gICAgICAgICAgICAgPC9kaXY+XG5cbi8vICAgICAgICAgICAgIHtpbnRlcnZpZXdEZXRhaWwuam9iRGVzY3JpcHRpb24gJiYgKFxuLy8gICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXQtNVwiPlxuLy8gICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3NOYW1lPVwiZm9udC1ib2xkIHRleHQtZ3JheS04MDBcIj5Kb2IgRGVzY3JpcHRpb248L2gzPlxuLy8gICAgICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LXNtIG10LTIgdGV4dC1ncmF5LTYwMFwiPntpbnRlcnZpZXdEZXRhaWwuam9iRGVzY3JpcHRpb259PC9wPlxuLy8gICAgICAgICAgICAgICAgIDwvZGl2PlxuLy8gICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIFxuLy8gICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtdC01XCI+XG4vLyAgICAgICAgICAgICAgICAgPGgyIGNsYXNzTmFtZT1cImZvbnQtYm9sZFwiPkludGVydmlldyBRdWVzdGlvbnM8L2gyPlxuLy8gICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBncmlkLWNvbHMtMiBtdC0zIGdhcC0zXCI+XG4vLyAgICAgICAgICAgICAgICAgICAgIHtpbnRlcnZpZXdEZXRhaWwucXVlc3Rpb25MaXN0Lm1hcCgoaXRlbSwgaW5kZXgpID0+IChcbi8vICAgICA8ZGl2IGtleT17aW5kZXh9IGNsYXNzTmFtZT1cImdyaWQtY29scy0yIG10LTMgZ2FwLTNcIj5cbi8vICAgICAgICAgPGgyIGNsYXNzTmFtZT1cInRleHQteHMgZmxleFwiPntpbmRleCsxfS4ge2l0ZW0/LnF1ZXN0aW9ufTwvaDI+XG4vLyAgICAgPC9kaXY+XG4vLyApKX1cbi8vICAgICAgICAgICAgICAgICA8L2Rpdj5cbi8vICAgICAgICAgICAgIDwvZGl2PlxuLy8gICAgICAgICA8L2Rpdj5cbi8vICAgICApO1xuLy8gfTtcblxuLy8gZXhwb3J0IGRlZmF1bHQgSW50ZXJ2aWV3RGV0YWlsQ29udGFpbmVyO1xuXG5cblxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/(main)/scheduled-interview/[interview_Id]/Details/_components/InterviewDetailContainer.jsx\n"));

/***/ })

});