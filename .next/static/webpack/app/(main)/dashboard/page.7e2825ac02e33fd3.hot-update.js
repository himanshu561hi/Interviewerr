/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(main)/dashboard/page",{

/***/ "(app-pages-browser)/./app/(main)/dashboard/_components/LatestInterviewList.jsx":
/*!******************************************************************!*\
  !*** ./app/(main)/dashboard/_components/LatestInterviewList.jsx ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("// \"use client\"\n// import { Button } from '@/components/ui/button';\n// import { Video } from 'lucide-react';\n// import Link from 'next/link';\n// import React, { useState, useEffect } from 'react';\n// import { useUser } from '@/hooks/useUser';\n// import { supabase } from '@/services/supabaseClient';\n// import InterviewCard from './InterviewCard';\n// function LatestInterviewList({interview}) {\n//     const [interviewList, setInterviewList] = useState([]);\n//     const { user, isLoading } = useUser();\n//     useEffect(() => {\n//         console.log('useEffect triggered, user:', user);\n//         console.log('isLoading:', isLoading);\n//         if (user && !isLoading) {\n//             GetInterviewList();\n//         }\n//     }, [user, isLoading]);\n//     const GetInterviewList = async () => {\n//         console.log('Fetching interviews for email:', user?.email);\n//         const { data: Interview, error } = await supabase\n//             .from('Interview')\n//             .select('*')\n//             .eq('email', user?.email)\n//             .order('id',{ascending: false}) \n//             .limit('6');\n//         if (error) {\n//             console.error('Error fetching interviews:', error);\n//             return;\n//         }\n//         console.log('Fetched Interview data:', Interview);\n//         setInterviewList(Interview || []);\n//     }\n//     console.log('Component rendered - interviewList length:', interviewList.length);\n//     if (isLoading) {\n//         return <div className=\"my-5\">Loading user...</div>;\n//     }\n//     return (\n//         <div className=\"my-5\">  \n//             {interviewList.length === 0 &&\n//                 <div className=\"p-5 flex flex-col gap-3 bg-white rounded-2xl border border-gray-200 items-center mt-5\">\n//                     <Video className=\"h-10 w-10 text-primary\" />\n//                     <h2 className=\"text-base font-medium text-gray-700\">You Don't Have Any Interviews Created</h2>\n//                     <Button asChild>\n//                         <Link href=\"/dashboard/create-interview\">+ Create New Interview</Link>\n//                     </Button>\n//                 </div>}\n//                 {interviewList && interviewList.length > 0 &&\n//                 <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3 gap-4 sm:gap-5\">\n//                         {interviewList.map((interview, index) => (\n//                             <InterviewCard interview={interview} key={index}/>\n//                         ))}\n//                 </div>}\n//         </div>\n//     );\n// }\n// export default LatestInterviewList;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC8obWFpbikvZGFzaGJvYXJkL19jb21wb25lbnRzL0xhdGVzdEludGVydmlld0xpc3QuanN4IiwibWFwcGluZ3MiOiJBQUNBLGVBQWU7QUFDZixtREFBbUQ7QUFDbkQsd0NBQXdDO0FBQ3hDLGdDQUFnQztBQUNoQyxzREFBc0Q7QUFDdEQsNkNBQTZDO0FBQzdDLHdEQUF3RDtBQUN4RCwrQ0FBK0M7QUFFL0MsOENBQThDO0FBQzlDLDhEQUE4RDtBQUM5RCw2Q0FBNkM7QUFFN0Msd0JBQXdCO0FBQ3hCLDJEQUEyRDtBQUMzRCxnREFBZ0Q7QUFDaEQsb0NBQW9DO0FBQ3BDLGtDQUFrQztBQUNsQyxZQUFZO0FBQ1osNkJBQTZCO0FBRTdCLDZDQUE2QztBQUM3QyxzRUFBc0U7QUFDdEUsNERBQTREO0FBQzVELGlDQUFpQztBQUNqQywyQkFBMkI7QUFDM0Isd0NBQXdDO0FBQ3hDLCtDQUErQztBQUMvQywyQkFBMkI7QUFFM0IsdUJBQXVCO0FBQ3ZCLGtFQUFrRTtBQUNsRSxzQkFBc0I7QUFDdEIsWUFBWTtBQUVaLDZEQUE2RDtBQUM3RCw2Q0FBNkM7QUFDN0MsUUFBUTtBQUVSLHVGQUF1RjtBQUd2Rix1QkFBdUI7QUFDdkIsOERBQThEO0FBQzlELFFBQVE7QUFFUixlQUFlO0FBQ2YsbUNBQW1DO0FBRW5DLDZDQUE2QztBQUM3QywwSEFBMEg7QUFDMUgsbUVBQW1FO0FBQ25FLHFIQUFxSDtBQUNySCx1Q0FBdUM7QUFDdkMsaUdBQWlHO0FBQ2pHLGdDQUFnQztBQUNoQywwQkFBMEI7QUFDMUIsZ0VBQWdFO0FBQ2hFLGlIQUFpSDtBQUNqSCxxRUFBcUU7QUFDckUsaUZBQWlGO0FBQ2pGLDhCQUE4QjtBQUM5QiwwQkFBMEI7QUFFMUIsaUJBQWlCO0FBQ2pCLFNBQVM7QUFDVCxJQUFJO0FBRUosc0NBQXNDIiwic291cmNlcyI6WyIvVm9sdW1lcy9IaW1hbnNodS9IaW1hbnNodS9HaXRIdWIgUmVwb3MvSW50ZXJ2aWV3ZXIvYXBwLyhtYWluKS9kYXNoYm9hcmQvX2NvbXBvbmVudHMvTGF0ZXN0SW50ZXJ2aWV3TGlzdC5qc3giXSwic291cmNlc0NvbnRlbnQiOlsiXG4vLyBcInVzZSBjbGllbnRcIlxuLy8gaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnQC9jb21wb25lbnRzL3VpL2J1dHRvbic7XG4vLyBpbXBvcnQgeyBWaWRlbyB9IGZyb20gJ2x1Y2lkZS1yZWFjdCc7XG4vLyBpbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuLy8gaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG4vLyBpbXBvcnQgeyB1c2VVc2VyIH0gZnJvbSAnQC9ob29rcy91c2VVc2VyJztcbi8vIGltcG9ydCB7IHN1cGFiYXNlIH0gZnJvbSAnQC9zZXJ2aWNlcy9zdXBhYmFzZUNsaWVudCc7XG4vLyBpbXBvcnQgSW50ZXJ2aWV3Q2FyZCBmcm9tICcuL0ludGVydmlld0NhcmQnO1xuXG4vLyBmdW5jdGlvbiBMYXRlc3RJbnRlcnZpZXdMaXN0KHtpbnRlcnZpZXd9KSB7XG4vLyAgICAgY29uc3QgW2ludGVydmlld0xpc3QsIHNldEludGVydmlld0xpc3RdID0gdXNlU3RhdGUoW10pO1xuLy8gICAgIGNvbnN0IHsgdXNlciwgaXNMb2FkaW5nIH0gPSB1c2VVc2VyKCk7XG5cbi8vICAgICB1c2VFZmZlY3QoKCkgPT4ge1xuLy8gICAgICAgICBjb25zb2xlLmxvZygndXNlRWZmZWN0IHRyaWdnZXJlZCwgdXNlcjonLCB1c2VyKTtcbi8vICAgICAgICAgY29uc29sZS5sb2coJ2lzTG9hZGluZzonLCBpc0xvYWRpbmcpO1xuLy8gICAgICAgICBpZiAodXNlciAmJiAhaXNMb2FkaW5nKSB7XG4vLyAgICAgICAgICAgICBHZXRJbnRlcnZpZXdMaXN0KCk7XG4vLyAgICAgICAgIH1cbi8vICAgICB9LCBbdXNlciwgaXNMb2FkaW5nXSk7XG5cbi8vICAgICBjb25zdCBHZXRJbnRlcnZpZXdMaXN0ID0gYXN5bmMgKCkgPT4ge1xuLy8gICAgICAgICBjb25zb2xlLmxvZygnRmV0Y2hpbmcgaW50ZXJ2aWV3cyBmb3IgZW1haWw6JywgdXNlcj8uZW1haWwpO1xuLy8gICAgICAgICBjb25zdCB7IGRhdGE6IEludGVydmlldywgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4vLyAgICAgICAgICAgICAuZnJvbSgnSW50ZXJ2aWV3Jylcbi8vICAgICAgICAgICAgIC5zZWxlY3QoJyonKVxuLy8gICAgICAgICAgICAgLmVxKCdlbWFpbCcsIHVzZXI/LmVtYWlsKVxuLy8gICAgICAgICAgICAgLm9yZGVyKCdpZCcse2FzY2VuZGluZzogZmFsc2V9KSBcbi8vICAgICAgICAgICAgIC5saW1pdCgnNicpO1xuXG4vLyAgICAgICAgIGlmIChlcnJvcikge1xuLy8gICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgaW50ZXJ2aWV3czonLCBlcnJvcik7XG4vLyAgICAgICAgICAgICByZXR1cm47XG4vLyAgICAgICAgIH1cblxuLy8gICAgICAgICBjb25zb2xlLmxvZygnRmV0Y2hlZCBJbnRlcnZpZXcgZGF0YTonLCBJbnRlcnZpZXcpO1xuLy8gICAgICAgICBzZXRJbnRlcnZpZXdMaXN0KEludGVydmlldyB8fCBbXSk7XG4vLyAgICAgfVxuXG4vLyAgICAgY29uc29sZS5sb2coJ0NvbXBvbmVudCByZW5kZXJlZCAtIGludGVydmlld0xpc3QgbGVuZ3RoOicsIGludGVydmlld0xpc3QubGVuZ3RoKTtcblxuXG4vLyAgICAgaWYgKGlzTG9hZGluZykge1xuLy8gICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJteS01XCI+TG9hZGluZyB1c2VyLi4uPC9kaXY+O1xuLy8gICAgIH1cblxuLy8gICAgIHJldHVybiAoXG4vLyAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXktNVwiPiAgXG5cbi8vICAgICAgICAgICAgIHtpbnRlcnZpZXdMaXN0Lmxlbmd0aCA9PT0gMCAmJlxuLy8gICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicC01IGZsZXggZmxleC1jb2wgZ2FwLTMgYmctd2hpdGUgcm91bmRlZC0yeGwgYm9yZGVyIGJvcmRlci1ncmF5LTIwMCBpdGVtcy1jZW50ZXIgbXQtNVwiPlxuLy8gICAgICAgICAgICAgICAgICAgICA8VmlkZW8gY2xhc3NOYW1lPVwiaC0xMCB3LTEwIHRleHQtcHJpbWFyeVwiIC8+XG4vLyAgICAgICAgICAgICAgICAgICAgIDxoMiBjbGFzc05hbWU9XCJ0ZXh0LWJhc2UgZm9udC1tZWRpdW0gdGV4dC1ncmF5LTcwMFwiPllvdSBEb24ndCBIYXZlIEFueSBJbnRlcnZpZXdzIENyZWF0ZWQ8L2gyPlxuLy8gICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIGFzQ2hpbGQ+XG4vLyAgICAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL2Rhc2hib2FyZC9jcmVhdGUtaW50ZXJ2aWV3XCI+KyBDcmVhdGUgTmV3IEludGVydmlldzwvTGluaz5cbi8vICAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4vLyAgICAgICAgICAgICAgICAgPC9kaXY+fVxuLy8gICAgICAgICAgICAgICAgIHtpbnRlcnZpZXdMaXN0ICYmIGludGVydmlld0xpc3QubGVuZ3RoID4gMCAmJlxuLy8gICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBncmlkLWNvbHMtMSBzbTpncmlkLWNvbHMtMiBsZzpncmlkLWNvbHMtMyB4bDpncmlkLWNvbHMtMyBnYXAtNCBzbTpnYXAtNVwiPlxuLy8gICAgICAgICAgICAgICAgICAgICAgICAge2ludGVydmlld0xpc3QubWFwKChpbnRlcnZpZXcsIGluZGV4KSA9PiAoXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEludGVydmlld0NhcmQgaW50ZXJ2aWV3PXtpbnRlcnZpZXd9IGtleT17aW5kZXh9Lz5cbi8vICAgICAgICAgICAgICAgICAgICAgICAgICkpfVxuLy8gICAgICAgICAgICAgICAgIDwvZGl2Pn1cbiAgICAgICAgICAgIFxuLy8gICAgICAgICA8L2Rpdj5cbi8vICAgICApO1xuLy8gfVxuXG4vLyBleHBvcnQgZGVmYXVsdCBMYXRlc3RJbnRlcnZpZXdMaXN0O1xuXG5cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/(main)/dashboard/_components/LatestInterviewList.jsx\n"));

/***/ })

});